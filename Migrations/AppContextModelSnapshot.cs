// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ceng423_WebApp_RestaurantProject.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ceng423_WebApp_RestaurantProject.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Ceng423_WebApp_RestaurantProject.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("restaurantDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("restaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("restaurantRate")
                        .HasColumnType("real");

                    b.Property<int>("restaurantScores")
                        .HasColumnType("int");

                    b.Property<int>("restaurantVoteCounter")
                        .HasColumnType("int");

                    b.ToTable("Restaurant");
                });
#pragma warning restore 612, 618
        }
    }
}
